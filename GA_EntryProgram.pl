use Scalar::Util qw(looks_like_number);

# input
my $infl             = "";
my $outf             = ""; 
my $tmpf             = "";
my $default_infl     = "/home/gpsr/NetBeansProjects/GA_Output/GA_input.txt";
my $default_outf     = "/home/gpsr/NetBeansProjects/GA_Output/";
my $default_tmpf     = "/home/gpsr/NetBeansProjects/GA_Output/GA_tmpfile.params";

# gloabl settings
my $JavaPath         = "/home/gpsr/java/jdk1.8.0_45/bin/java";
my $EntryProgramPath = "NetBeansProjects/GA Project 23/build/classes";
my $ECJMain          = "ec.Evolve";
my $InputKeyword     = "loop";

# check inputs
if ($infl eq ""){$infl = $default_infl;}
if ($outf eq ""){$outf = $default_outf . "/" . time() . "/";}
if ($tmpf eq ""){$tmpf = $default_tmpf;}

# Pre-processing work
print "*---------------------------------------------------------------------------------------*". "\n";
print "*                             Genetic program (v0.0a)                                   *". "\n";
print "*---------------------------------------------------------------------------------------*". "\n";
print "Global settings ". "\n";
print "The input  file   : " . $infl . "\n";
print "The output folder : " . $outf . "\n";
print "The template para : " . $tmpf . "\n";

# loops
#mkdir($outf, 0755);

# Read input file and summarise running information
open(my $fh, '<', $infl) or die "Could not open file '$infl' $!";

# build parameter database
my @paraDB  = ();
my $num_para = 0;
my $combinations = 1;
while (my $row = <$fh>) {
	chomp($row);
	build_paraDB($row);
}

# print paraDB
for (@paraDB) {
	print "@{$_}\n";
}

# build combinations 
print $combinations . "\n";
my @paraSettings = ();
for (my $i=0; $i<$num_para; $i++){
	@tmp = @paraDB[$i];
	$num_values = @tmp;
	print $num_values;
	print $tmp[0];
	print "\n";
	for (my $j=0; $j<$combinations; $j++){
		#$paraSettings[i][j] = $paraDB[i][j];
		#print $paraDB[i][0] . "\n"; 
	}
}


#print $fh "My first report generated by perl\n"; # write file
close $fh;



# build parameter file
my $ECJParaFile      = "ga/app/app1/exp1.params"; 
my $JavaCmd = $JavaPath . " " . $ECJMain . " -file " . $ECJParaFile; 

# call ECJ
# for example - system("/home/gpsr/java/jdk1.8.0_45/bin/java ec.Evolve -file ga/app/app1/exp1.params");
#chdir($EntryProgramPath);
#system($JavaCmd);

#--------------------------------------------------------------------------
# build parameter database 
#--------------------------------------------------------------------------
sub build_paraDB{
	my ($row) = @_;	
	my $header = substr $row,0,4;
	if (length $row > 4 and $header eq $InputKeyword) {
		$row =~ s/\s//g;
		$row = substr $row,5;
		@Kword_fields = split(/=/, $row);
		@Value_fields = split(/,/, $Kword_fields[1]);
		
		$paraDB[$num_para][0] = $Kword_fields[0];
		$len = @Value_fields;

		if (looks_like_number($Value_fields[0])){
#			print "min : $Value_fields[0] \n";
#			print "max : $Value_fields[1] \n";
#			print "step: $Value_fields[2] \n";
			$step = 0;
			for (my $k=$Value_fields[0]; $k<=$Value_fields[1]; $k=$k+$Value_fields[2]){
				$paraDB[$num_para][$step+1] = $k;
				$step = $step + 1;}
			$combinations = $combinations * $step;
		} else {						
			for (my $j=0; $j<$len; $j++){
				$paraDB[$num_para][$j+1] = $Value_fields[$j];}
			$combinations = $combinations * $len;
		}

		$num_para = $num_para + 1;
	}
	
}





